{
    "Comment": "Delete Question and Order Questions",
    "StartAt": "Delete Question",
    "States": {
        "Delete Question": {
            "Type": "Task",
            "Resource": "${DDBDeleteItem}",
            "Parameters": {
                "TableName": "${TableName}",
                "Key": {
                    "id": {
                        "S": "QUESTION"
                    },
                    "sort": {
                        "S.$": "$.questionId"
                    }
                },
                "ReturnValues": "ALL_OLD"
            },
            "ResultSelector": {
                "orderDelete.$": "$.Attributes.order.N"
            },            
            "Next": "Get Questions"
        },
        "Get Questions": {
            "Type": "Task",
            "Resource": "${DDBQuery}",
            "Parameters": {
                "TableName": "${TableName}",
                "KeyConditionExpression": "id=:id",
                "ExpressionAttributeNames":{
                    "#order": "order"
                },
                "ExpressionAttributeValues": {
                    ":id": {
                        "S": "QUESTION"
                    },
                    ":order": {
                        "N.$": "States.Format('{}', $.orderDelete)"
                    }
                },
                "FilterExpression": "#order > :order",
                "ProjectionExpression": "sort"
            },
            "OutputPath": "$.Items",
            "Next": "MapState Order Questions"
        },
        "MapState Order Questions": {
            "Type": "Map",
            "MaxConcurrency": 40,
            "Iterator": {
                "StartAt": "Update Question",
                "States": {
                    "Update Question": {
                        "Type": "Task",
                        "Resource": "${DDBUpdateItem}",
                        "Parameters": {
                            "TableName": "${TableName}",
                            "Key": {
                                "id": {
                                    "S": "QUESTION"
                                },
                                "sort": {
                                    "S.$": "$.sort.S"
                                }
                            },
                            "ExpressionAttributeNames":{
                                "#order": "order"
                            },
                            "ExpressionAttributeValues":{
                                ":order": {
                                    "N": "-1"
                                }
                            },
                            "UpdateExpression":"ADD #order :order"
                        },
                        "End": true
                    }
                }
            },
            "Next": "Sucess State"
        },
        "Sucess State":{
            "Type": "Pass",
            "OutputPath": "$$.Execution.Input.questionId",
            "End": true
        }
    }
}